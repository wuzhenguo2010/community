# ServerProperties
server.port=8080
# 项目名
server.servlet.context-path=/community

## 设置字符集
#server.servlet.encoding.enabled=true
#server.servlet.encoding.charset=UTF-8
#server.servlet.encoding.force=true
#server.tomcat.uri-encoding=UTF-8


# ThymeleafProperties
spring.thymeleaf.cache=false

# DataSourceProperties
# mysql数据库链接
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/community?characterEncoding=utf-8&useSSL=false&serverTimezone=Hongkong
spring.datasource.username=root
spring.datasource.password=q250094529

spring.datasource.type=com.zaxxer.hikari.HikariDataSource
spring.datasource.hikari.maximum-pool-size=15
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=30000


# MybatisProperties
mybatis.mapper-locations=classpath:mapper/*.xml
mybatis.type-aliases-package=com.njupt.community.entity
# 自动生成id
mybatis.configuration.use-generated-keys=true
mybatis.configuration.map-underscore-to-camel-case=true

# logger 日志
# 用于将sql查询输出控制台方便查错
# debug级别以上的都可以打印
# logging.level.com.njupt.community=debug
# 将日志打印到文件中(所有日志都在一个文件夹中，太复杂，不适合日常项目)
#logging.file.path=D:/Java/Logger/community.log

# MailProperties
spring.mail.host=smtp.qq.com
spring.mail.port=465
spring.mail.username=896164746@qq.com
spring.mail.password=vqruteuxnvjubcjc
spring.mail.protocol=smtps
spring.mail.properties.mail.smtp.ssl.enable=true
#spring.mail.properties.mail.smtp.starttls.enable=false
#spring.mail.properties.mail.smtp.starttls.required=false

# community域名
community.path.domain=http://localhost:8080

# 上传资源存放位置
community.path.upload=F:/upload

# 设置单个文件大小
spring.servlet.multipart.max-file-size=10MB
# 设置单次请求文件的总大小
spring.servlet.multipart.max-request-size=10MB

# RedisProperties
# 第11个库
spring.redis.database=11
spring.redis.host=localhost
spring.redis.port=6379

# KafkaProperties
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=community-consumer-group
# 是否自动提交消费者的偏移量
spring.kafka.consumer.enable-auto-commit=true
# 自动提交频率 ms
spring.kafka.consumer.auto-commit-interval=3000

# ElasticsearchProperties
spring.data.elasticsearch.cluster-name=njupt
spring.data.elasticsearch.cluster-nodes=127.0.0.1:9300

# Spring普通线程池配置 TaskExecutionProperties
spring.task.execution.pool.core-size=5
spring.task.execution.pool.max-size=15
# 阻塞线程
spring.task.execution.pool.queue-capacity=100

# Spring定时线程池配置 TaskSchedulingProperties
spring.task.scheduling.pool.size=5

# QuartzProperties
# 存储方式
spring.quartz.job-store-type=jdbc
# 调度器名字
spring.quartz.scheduler-name=communityScheduler
# 调度器Id自动生成
spring.quartz.properties.org.quartz.scheduler.instanceId=AUTO
spring.quartz.properties.org.quartz.jobStore.class=org.quartz.impl.jdbcjobstore.JobStoreTX
spring.quartz.properties.org.quartz.jobStore.driverDelegateClass=org.quartz.impl.jdbcjobstore.StdJDBCDelegate
# 是否用集群方式
spring.quartz.properties.org.quartz.jobStore.isClustered=true
spring.quartz.properties.org.quartz.threadPool.class=org.quartz.simpl.SimpleThreadPool
spring.quartz.properties.org.quartz.threadPool.threadCount=5

# wk
wk.image.command=D:/Java/wkhtmltopdf/bin/wkhtmltoimage
wk.image.storage=D:/Java/data/wk-images

# qiniu access表明用户身份标识秘钥 secret表示文件加密的秘钥
qiniu.key.access=vLCAl2XdYUjiyJOQf5VYRk1FFa8OmDqCeW41xZuh
qiniu.key.secret=IXsaFpeqfEZ7mExps8Yobe5UbdBwSBXUllubMDJ0
# 存放头像空间
qiniu.bucket.header.name=njupt-community-header
qiniu.bucket.header.url=http://rc9rv9oad.hd-bkt.clouddn.com
qiniu.bucket.share.name=njupt-community-share
qiniu.bucket.share.url=http://rc9rwjplh.hd-bkt.clouddn.com

# Caffeine缓存策略
caffeine.posts.max-size=15
# 过期时间，秒
caffeine.posts.expire-seconde=180

# 监控actuator配置
# 暴露所有端点
management.endpoints.web.exposure.include=*
# 禁用个别端点
management.endpoints.web.exposure.exclude=info,caches